{"version":3,"sources":["Header.js","SlideShow.js","MainContent.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","href","SlideShow","MainContent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","class","src_SlideShow","React","Component","Footer","App","src_Header","src_MainContent","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAqCeA,MAnCf,WACC,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACTH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACjBH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,SAAP,yBACJJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KACSC,UAAU,WACVE,KAAK,uCAFd,eAIJL,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KACSC,UAAU,WACVE,KAAK,iCAFd,gBAKJL,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KACSC,UAAU,WACVE,KAAK,gEAFd,sBCVIC,MARf,WACE,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCCsCSK,cAvCb,SAAAA,IAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,6EAKb,OACEV,EAAAC,EAAAC,cAAA,OAAKE,GAAG,QAENJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,SAASU,MAAM,0BACrBd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,WAAlB,qBACeF,EAAAC,EAAAC,cAAA,WADf,UAGHF,EAAAC,EAAAC,cAAA,KAAGE,GAAG,SAASU,MAAM,iBACrBd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAAmBF,EAAAC,EAAAC,cAAA,WAAnB,mBAEHF,EAAAC,EAAAC,cAAA,KAAGE,GAAG,SAASU,MAAM,yBACrBd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,WAAf,oBACcF,EAAAC,EAAAC,cAAA,WADd,YAEMF,EAAAC,EAAAC,cAAA,WAFN,sBAKHF,EAAAC,EAAAC,cAAA,KAAGE,GAAG,SAASU,MAAM,oBACrBd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uCAGPF,EAAAC,EAAAC,cAAA,OAAKY,MAAM,UACTd,EAAAC,EAAAC,cAAA,OAAKY,MAAM,WACTd,EAAAC,EAAAC,cAACa,EAAD,iBA/BYC,IAAMC,WCOjBC,MARf,WACC,OACClB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,GAAG,UAAX,oFCeSe,mLAXX,OACDnB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACkB,EAAD,MACIpB,EAAAC,EAAAC,cAACmB,EAAD,MACJrB,EAAAC,EAAAC,cAACoB,EAAD,cANcL,aCKEM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3fe8a5c9.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header() {\n\treturn (\n\t\t<div className=\"App\">\n        <header className=\"App-header\">\n        \t<h3 id=\"title\">Sawasdee Thai Cuisine</h3>\n\t\t\t\t\t<nav className=\"App-nav\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><a \n                    className=\"nav-item\"\n                    href=\"./my-app/src/menus/Soquel_lunch.pdf\">Lunch Menu</a>\n              </li>\n\t\t\t\t\t\t\t<li>•</li>\n\t\t\t\t\t\t\t<li><a \n                    className=\"nav-item\"\n                    href=\"./src/menus/Soquel_dinner.pdf\">Dinner Menu</a>\n                  \n              </li>\n\t\t\t\t\t\t\t<li>•</li>\n\t\t\t\t\t\t\t<li><a \n                    className=\"nav-item\"\n                    href=\"https://onlineorders.wawio.com/menu/58b094014f5ee90b787b23ce\">Order Online</a></li>\n    {/*<li>•</li>\n              <li><a\n                    className=\"nav-item\"\n                    href=\"#\">Contact Us</a>\n                    \n              </li>*/}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n        \n        </header>\n      </div>\n\t)\n}\n\nexport default Header","import React from 'react'\n\nfunction SlideShow() {\n  return (\n    <div>\n      <p>slidehsow goes here</p>\n    </div>\n  )\n}\n\nexport default SlideShow","import React from 'react'\nimport SlideShow from './SlideShow.js'\n\nclass MainContent extends React.Component {\n  constructor() {\n    super()\n  }\n  \n  render() {\n    return (\n      <div id=\"body\">\n        \n        <div className='row'>\n          <div className='column'>\n            <div className='sidebar'>\n              <i id='purple' class=\"fas fa-map-marker-alt\"></i>\n              <p><em>5050 Soquel Dr<br/>\n              Soquel, California<br/>\n              95073</em></p>\n              <i id='purple' class=\"fas fa-phone\"></i>\n              <p><em>(831) 462-5051 <br/>\n              (831) 431-6988</em></p>\n              <i id='purple' class=\"fas fa-business-time\"></i>\n              <p><em>Sun-Thurs: <br/>\n              11:00AM - 9:30PM <br/>\n              Fri-Sat: <br/>\n              11:00AM - 10:00PM\n              </em></p>\n              <i id='purple' class=\"fas fa-envelope\"></i>\n              <p><em>sawasdee5050@gmail.com</em></p>\n            </div>\n          </div>\n          <div class='column'>\n            <div class='content'>\n              <SlideShow />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MainContent","import React from 'react'\n\nfunction Footer() {\n\treturn (\n\t\t<div>\n      <footer id=\"footer\">Copyright © 2013 Sawasdee Soquel & Sawasdee By The Sea. All rights reserved</footer>\n    </div>\n\t)\n}\n\nexport default Footer","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header.js'\nimport MainContent from './MainContent.js'\nimport Footer from './Footer.js'\n\nclass App extends Component {\n  render() {\n    return (\n\t\t\t<div>\n\t\t\t\t<Header />\n        <MainContent />\n\t\t\t\t<Footer />\n\t\t\t</div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}